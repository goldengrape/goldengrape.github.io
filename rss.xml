<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GoldenGrape's Blog</title><link>https://goldengrape.github.io/</link><description>This is a blog site for GoldenGrape.</description><atom:link href="https://goldengrape.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2020 &lt;a href="mailto:https://twitter.com/goldengrape"&gt;Golden Grape&lt;/a&gt; </copyright><lastBuildDate>Tue, 09 Jun 2020 07:42:48 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>练字录像</title><link>https://goldengrape.github.io/posts/bulabula/record_my_practice/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;学习了几天OpenCV以后, 我终于可以在练毛笔字时方便地录像了. 我这种Nerd, 练个毛笔字也要搞得像全栈开发的样子. &lt;/p&gt;
&lt;p&gt;&lt;img alt="兴_原本_small.2020-06-09 15_00_43" src="https://i.loli.net/2020/06/09/RmewGt4gHLrfFhP.gif"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/bulabula/record_my_practice/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/bulabula/record_my_practice/</guid><pubDate>Tue, 09 Jun 2020 05:00:00 GMT</pubDate></item><item><title>OpenCV C++学习笔记(6): 颜色识别定位</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_6/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;在 opencv-srf 网站上, 有一个&lt;a href="https://www.opencv-srf.com/2010/09/object-detection-using-color-seperation.html"&gt;颜色检测和物体跟踪&lt;/a&gt;的示例. 使用inRange来检测颜色, 并且Moments类来追踪这个颜色的物体. &lt;/p&gt;
&lt;p&gt;这个例子只能追踪&lt;strong&gt;一个&lt;/strong&gt;物体, 如果有多个同样颜色的物体, 用Moments只能找到这些物体最外面的框, 把这些物体当作一个, 找到他们的中心. 但这不是我想要的. 所以只好临摹了另外一个示例, 将两个凑在一起, 达成了目的.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_6/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_6/</guid><pubDate>Tue, 09 Jun 2020 04:00:00 GMT</pubDate></item><item><title>OpenCV C++学习笔记(5): 原位做4点投影变换</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_5/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="https://docs.opencv.org/master/de/dd4/samples_2cpp_2warpPerspective_demo_8cpp-example.html"&gt;OpenCV官方的warpPerspective示例&lt;/a&gt;用一个窗口进行选区, 用另一个窗口进行显示: &lt;/p&gt;
&lt;p&gt;&lt;img alt="trans" src="https://i.loli.net/2020/06/09/SK6PBipY4jnOWTR.jpg"&gt;&lt;/p&gt;
&lt;p&gt;但我觉得这样有点麻烦, 不太适合移动端、小屏幕的操作. 于是做了一点改进, 使我可以在一个窗口内直接操作图像.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_5/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_5/</guid><pubDate>Tue, 09 Jun 2020 03:00:00 GMT</pubDate></item><item><title>OpenCV C++学习笔记(4): 4点投影变换</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_4/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;真正有趣的东西来了, 总算开始学到了用ffmpeg搞不定的事情. 就是用OpenCV写个类似office lens那样的东西, 把倾斜的平面给抻直. 或者准确的说, 是把源图上的4个点, 映射到目标图上的4个点. &lt;/p&gt;
&lt;p&gt;&lt;img alt="trans" src="https://i.loli.net/2020/06/09/SK6PBipY4jnOWTR.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_4/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_4/</guid><pubDate>Tue, 09 Jun 2020 02:00:00 GMT</pubDate></item><item><title>OpenCV C++学习笔记(3): 视频读写</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_3/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;有坑&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;VideoWriter&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;fourcc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;'m'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'p'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'v'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_3/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_3/</guid><pubDate>Tue, 09 Jun 2020 01:00:00 GMT</pubDate></item><item><title>OpenCV C++学习笔记(2): Mat数据结构</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_2/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;opencv用了一种Mat的矩阵来存储图像数据, Mat看起来很神秘, 尤其是在处理图片局部的时候, 很神秘, 我一直想把两个摄像头拍摄的画面合并到一张图上显示, 查了很多, 才大概弄明白一点. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_2/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_2/</guid><pubDate>Thu, 04 Jun 2020 04:00:00 GMT</pubDate></item><item><title>OpenCV C++学习笔记(1): 读/写图像</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_1/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;《OpenCV 4计算机视觉项目实战》第二章, 代码在&lt;a href="https://github.com/PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition/tree/master/Chapter_02"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_1/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_1/</guid><pubDate>Tue, 02 Jun 2020 15:00:00 GMT</pubDate></item><item><title>OpenCV C++学习笔记(0): Mac下安装</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_0/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;一直想写一个video see-through的程序, 用头戴显示器通过摄像头看外面, 以前用python写过, 但是延迟太明显. 于是去学了C++, 但也一直没有动手, 最近写毛笔字时开始给自己录像, 于是又有了很多视频需要剪切、调整、变形, 这些操作肯定是不愿意手动的, 于是打算用OpenCV, 然后继续嫌弃python太慢, 既然已经学了C++, 那干脆把OpenCV的C++版本学会好了. &lt;/p&gt;
&lt;p&gt;于是一边查一边写, 写一句查一句, 觉得效率太低, 反正磨刀不误砍柴工, 干脆找本书认真学OpenCV好了, 目前买了本&lt;a href="https://www.amazon.cn/dp/B07VDQ2BMT"&gt;《OpenCV 4计算机视觉项目实战》&lt;/a&gt; 来看. &lt;/p&gt;
&lt;p&gt;首先是安装. 我觉得开源软件如果提供一个远程安装指导的付费服务, 一定能产生巨巨巨巨巨大的GDP. 一开始折腾了一整天, 也没搞定一句&lt;code&gt;#include &amp;lt;opencv2/opencv.hpp&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_0/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_0/</guid><pubDate>Tue, 02 Jun 2020 13:00:00 GMT</pubDate></item><item><title>AI 4 Med 笔记(1.2)各种率</title><link>https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;第一门课第二周, 主要讲&lt;/p&gt;
&lt;h3 id="各种率"&gt;各种率&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E5%90%84%E7%A7%8D%E7%8E%87"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;真假阴阳各种率&lt;/li&gt;
&lt;li&gt;敏感性和特异性&lt;/li&gt;
&lt;li&gt;阳性预测率(PPV)和阴性预测率&lt;/li&gt;
&lt;li&gt;置信区间, ROC曲线, F1 score&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;我之前学Scikit-learn的时候, 笔记记得挺清楚的.&lt;/p&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://goldengrape.github.io/posts/python/scikit-learn-note-2/"&gt;Scikit-learn笔记2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://goldengrape.github.io/posts/python/scikit-learn-note-3/"&gt;Scikit-learn笔记3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://goldengrape.github.io/posts/python/scikit-learn-note-4/"&gt;Scikit-learn笔记4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;而且这张图做得很好, 一张图说明问题, 先看图, 再看后面的计算方式:&lt;/p&gt;
&lt;!-- ![](/images/ratios.png) --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;例如有这样的结果:&lt;/p&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;以下表格中, 分子是红字, 分母是黄色背景, 考虑C的情况&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Accuracy"&gt;Accuracy&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#Accuracy"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;正确率&lt;/li&gt;
&lt;li&gt;有病没病都说对了的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
Accuracy=\frac{100+110+120}{100+6+11+1+110+12+2+7+120}
$$&lt;hr&gt;
&lt;h3 id="Recall"&gt;Recall&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#Recall"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;敏感性, 检出率, 真阳性率.&lt;/li&gt;
&lt;li&gt;实际有病, 测出有病的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
Recall=\frac{120}{2+7+120}
$$&lt;hr&gt;
&lt;h3 id="Precision"&gt;Precision&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#Precision"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;精确度, 阳性预测率, PPV&lt;/li&gt;
&lt;li&gt;测出有病, 还说对了的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
Precision=\frac{120}{11+12+120}
$$&lt;hr&gt;
&lt;h3 id="Specificity"&gt;Specificity&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#Specificity"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;特异性, 真阴性率&lt;/li&gt;
&lt;li&gt;测出没病, 还说对了的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
Specificity=\frac{100+6+1+110}{100+6+1+110+2+7}
$$&lt;hr&gt;
&lt;h3 id="False-Positive-Rate"&gt;False Positive Rate&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#False-Positive-Rate"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;假阳性率, 误报率&lt;/li&gt;
&lt;li&gt;本来没病, 测出有病的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
False Positive Rate=\frac{11+12}{100+6+11+1+110+12}
$$&lt;hr&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="真假阴阳性"&gt;真假阴阳性&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E7%9C%9F%E5%81%87%E9%98%B4%E9%98%B3%E6%80%A7"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th style="text-align:left"&gt;&lt;/th&gt;
&lt;th style="text-align:left"&gt;预测为(-)&lt;/th&gt;
&lt;th style="text-align:left"&gt;预测为(+)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;实际为(-)&lt;/td&gt;
&lt;td style="text-align:left"&gt;TN&lt;/td&gt;
&lt;td style="text-align:left"&gt;FP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;实际为(+)&lt;/td&gt;
&lt;td style="text-align:left"&gt;FN&lt;/td&gt;
&lt;td style="text-align:left"&gt;TP&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;TP = true positive 真阳性&lt;/li&gt;
&lt;li&gt;FP = false positive (Type I error) 假阳性(Type I错误) , 印象里就是P&amp;lt;0.05的0.05&lt;/li&gt;
&lt;li&gt;TN = true negative 真阴性&lt;/li&gt;
&lt;li&gt;FN = false negative (Type II error)假阴性(Type II错误)&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="敏感特异性"&gt;敏感特异性&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E6%95%8F%E6%84%9F%E7%89%B9%E5%BC%82%E6%80%A7"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Accuracy: 分类正确的概率. 实际为(-)预测为(-), 实际为(+)预测为(+)叫做正确. 
$$
Accuracy=\frac{TP + TN}{TP + TN + FP + FN}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Classification error: (1-Accuracy), 分类错误的概率
$$
Classification\;  error=\frac{FP + FN}{TP + TN + FP + FN}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Recall, 真阳性率: 实际上为(+), 能够被预测成(+)的概率&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recall又叫 &lt;/li&gt;
&lt;li&gt;True Positive Rate (TPR): 真阳性率&lt;/li&gt;
&lt;li&gt;Sensitivity: 敏感性&lt;/li&gt;
&lt;li&gt;Probability of detection: 检出率
$$
Recall=\frac{TP}{TP+FN}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Precision: 如果预测为(+), 那么预测正确的概率
$$
Precision=\frac{TP}{TP+FP}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;False positive rate (FPR): 假阳性率, 误报率. 本来实际上是(-)的, 结果分类器报告成(+)的概率&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
$$
False Positive Rate=\frac{FP}{TN+FP}
$$&lt;ul&gt;
&lt;li&gt;Specificity, 特异性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应该是真阴性率(之前写错了), TNR, 实际上为(-), 能够被测成(-)的概率
$$
Specificity=\frac{TN}{TN+FN}
$$&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="F1-score:-结合precision与recall"&gt;F1-score: 结合precision与recall&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#F1-score:-%E7%BB%93%E5%90%88precision%E4%B8%8Erecall"&gt;¶&lt;/a&gt;&lt;/h3&gt;$$
F_1=2\frac{precision \times recall}{precision+recall}=\frac{2TP}{2TP+FN+FP}
$$&lt;h3 id="F-score:-更一般地将precision与recall结合成单独一个数"&gt;F-score: 更一般地将precision与recall结合成单独一个数&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#F-score:-%E6%9B%B4%E4%B8%80%E8%88%AC%E5%9C%B0%E5%B0%86precision%E4%B8%8Erecall%E7%BB%93%E5%90%88%E6%88%90%E5%8D%95%E7%8B%AC%E4%B8%80%E4%B8%AA%E6%95%B0"&gt;¶&lt;/a&gt;&lt;/h3&gt;$$
F_\beta=(1+\beta^2)\frac{precision \times recall}{\beta^2\times precision+recall}=\frac{(1+\beta^2)TP}{(1+\beta^2)TP+FN+FP}
$$&lt;p&gt;𝛽用来调整recall vs precision之间的重要程度:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Precision-oriented users: 𝜷 = 0.5 &lt;/li&gt;
&lt;li&gt;Recall-oriented users: 𝜷 = 2&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="阳性预测率-PPV"&gt;阳性预测率 PPV&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E9%98%B3%E6%80%A7%E9%A2%84%E6%B5%8B%E7%8E%87-PPV"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;实际上就是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Precision: 如果预测为(+), 那么预测正确的概率
$$
Precision=\frac{TP}{TP+FP}
$$&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
$$ 
PPV = Precision = \frac{sensitivity \times prevalence}{sensitivity  \times  prevalence+(1 - specificity) \times (1 - prevalence)}
$$&lt;p&gt;其中 prevalence=P(pos), 阳性结果的发生率. 如果自己都知道TP、FP的数据, 当然用简单的公式计算, 如果拿到的是一个标记好各种率的试剂盒, 或者是看一篇新闻报道, 对方把各种率搅合在一起, 那么可能就要通过后一种公式来计算&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="置信区间"&gt;置信区间&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E7%BD%AE%E4%BF%A1%E5%8C%BA%E9%97%B4"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;比如某个概率p=0.80(95% CI 0.78, 0.82),&lt;/p&gt;
&lt;p&gt;是说, 真实的概率p, 谁知道是啥, 有95%的概率, 会落在[0.78, 0.82]的范围内. 置信区间的范围和样本量有关, 样本量越大, 置信区间的宽度越窄.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="ROC曲线"&gt;ROC曲线&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#ROC%E6%9B%B2%E7%BA%BF"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;X轴: False Positive Rate 假阳性率&lt;/li&gt;
&lt;li&gt;Y轴: True Positive Rate  真阳性率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;左上顶点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理想点&lt;/li&gt;
&lt;li&gt;False positive rate 假阳性率=0 &lt;/li&gt;
&lt;li&gt;True positive rate 真阳性率=1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://i.loli.net/2018/04/01/5ac0c250b9182.png" alt="ROC.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ROC曲线越往左上, 越好. &lt;/li&gt;
&lt;li&gt;曲线下面积(AUC), 越大越好&lt;/li&gt;
&lt;li&gt;45度线是随机瞎猜线&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://i.loli.net/2018/04/01/5ac0c511e280e.png" alt="ROC-2.png"&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/</guid><pubDate>Mon, 11 May 2020 02:00:00 GMT</pubDate></item><item><title>人工晶体闪辉Glistening</title><link>https://goldengrape.github.io/posts/ophthalmology/IOL_Glistening/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;近期认真读了一下关于人工晶体Glistening(闪辉)的文献, 连带读了相关的专利. 很有意思, 写出来供眼科同道观赏. (专业文章讲解惯例, 专业名词第一次出现时使用中文译名, 此后持续使用英文原名.)&lt;/p&gt;
&lt;p&gt;临床部分比较无聊, 但原理部分相当有趣.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/ophthalmology/IOL_Glistening/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 10 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/ophthalmology/IOL_Glistening/</guid><pubDate>Fri, 08 May 2020 16:00:00 GMT</pubDate></item></channel></rss>