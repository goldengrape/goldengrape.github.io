<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GoldenGrape's Blog</title><link>https://goldengrape.github.io/</link><description>This is a blog site for GoldenGrape.</description><atom:link href="https://goldengrape.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2020 &lt;a href="mailto:https://twitter.com/goldengrape"&gt;Golden Grape&lt;/a&gt; </copyright><lastBuildDate>Mon, 08 Jun 2020 18:44:19 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>OpenCV C++学习笔记(2): Mat数据结构</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_2/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;opencv用了一种Mat的矩阵来存储图像数据, Mat看起来很神秘, 尤其是在处理图片局部的时候, 很神秘, 我一直想把两个摄像头拍摄的画面合并到一张图上显示, 查了很多, 才大概弄明白一点. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_2/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_2/</guid><pubDate>Thu, 04 Jun 2020 04:00:00 GMT</pubDate></item><item><title>OpenCV C++学习笔记(1): 读/写图像</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_1/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;《OpenCV 4计算机视觉项目实战》第二章, 代码在&lt;a href="https://github.com/PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition/tree/master/Chapter_02"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_1/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_1/</guid><pubDate>Tue, 02 Jun 2020 15:00:00 GMT</pubDate></item><item><title>OpenCV C++学习笔记(0): Mac下安装</title><link>https://goldengrape.github.io/posts/Cpp/openCV/opencv_0/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;一直想写一个video see-through的程序, 用头戴显示器通过摄像头看外面, 以前用python写过, 但是延迟太明显. 于是去学了C++, 但也一直没有动手, 最近写毛笔字时开始给自己录像, 于是又有了很多视频需要剪切、调整、变形, 这些操作肯定是不愿意手动的, 于是打算用OpenCV, 然后继续嫌弃python太慢, 既然已经学了C++, 那干脆把OpenCV的C++版本学会好了. &lt;/p&gt;
&lt;p&gt;于是一边查一边写, 写一句查一句, 觉得效率太低, 反正磨刀不误砍柴工, 干脆找本书认真学OpenCV好了, 目前买了本&lt;a href="https://www.amazon.cn/dp/B07VDQ2BMT"&gt;《OpenCV 4计算机视觉项目实战》&lt;/a&gt; 来看. &lt;/p&gt;
&lt;p&gt;首先是安装. 我觉得开源软件如果提供一个远程安装指导的付费服务, 一定能产生巨巨巨巨巨大的GDP. 一开始折腾了一整天, 也没搞定一句&lt;code&gt;#include &amp;lt;opencv2/opencv.hpp&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/Cpp/openCV/opencv_0/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/Cpp/openCV/opencv_0/</guid><pubDate>Tue, 02 Jun 2020 13:00:00 GMT</pubDate></item><item><title>AI 4 Med 笔记(1.2)各种率</title><link>https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;第一门课第二周, 主要讲&lt;/p&gt;
&lt;h3 id="各种率"&gt;各种率&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E5%90%84%E7%A7%8D%E7%8E%87"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;真假阴阳各种率&lt;/li&gt;
&lt;li&gt;敏感性和特异性&lt;/li&gt;
&lt;li&gt;阳性预测率(PPV)和阴性预测率&lt;/li&gt;
&lt;li&gt;置信区间, ROC曲线, F1 score&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;我之前学Scikit-learn的时候, 笔记记得挺清楚的.&lt;/p&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://goldengrape.github.io/posts/python/scikit-learn-note-2/"&gt;Scikit-learn笔记2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://goldengrape.github.io/posts/python/scikit-learn-note-3/"&gt;Scikit-learn笔记3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://goldengrape.github.io/posts/python/scikit-learn-note-4/"&gt;Scikit-learn笔记4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;而且这张图做得很好, 一张图说明问题, 先看图, 再看后面的计算方式:&lt;/p&gt;
&lt;!-- ![](/images/ratios.png) --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;例如有这样的结果:&lt;/p&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;以下表格中, 分子是红字, 分母是黄色背景, 考虑C的情况&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Accuracy"&gt;Accuracy&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#Accuracy"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;正确率&lt;/li&gt;
&lt;li&gt;有病没病都说对了的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
Accuracy=\frac{100+110+120}{100+6+11+1+110+12+2+7+120}
$$&lt;hr&gt;
&lt;h3 id="Recall"&gt;Recall&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#Recall"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;敏感性, 检出率, 真阳性率.&lt;/li&gt;
&lt;li&gt;实际有病, 测出有病的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
Recall=\frac{120}{2+7+120}
$$&lt;hr&gt;
&lt;h3 id="Precision"&gt;Precision&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#Precision"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;精确度, 阳性预测率, PPV&lt;/li&gt;
&lt;li&gt;测出有病, 还说对了的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
Precision=\frac{120}{11+12+120}
$$&lt;hr&gt;
&lt;h3 id="Specificity"&gt;Specificity&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#Specificity"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;特异性, 真阴性率&lt;/li&gt;
&lt;li&gt;测出没病, 还说对了的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
Specificity=\frac{100+6+1+110}{100+6+1+110+2+7}
$$&lt;hr&gt;
&lt;h3 id="False-Positive-Rate"&gt;False Positive Rate&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#False-Positive-Rate"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;假阳性率, 误报率&lt;/li&gt;
&lt;li&gt;本来没病, 测出有病的概率&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;&lt;th&gt;预测=A&lt;/th&gt;&lt;th&gt;预测=B&lt;/th&gt;&lt;th&gt;预测=C&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=A&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;100&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;6&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;11&lt;/td&gt; 
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;实际=B&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;1&lt;/td&gt;
            &lt;td style="background-color: yellow; color:black;"&gt;110&lt;/td&gt;
            &lt;td style="background-color: yellow; color:red;"&gt;12&lt;/td&gt; 
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;实际=C&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;2&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;7&lt;/td&gt;
            &lt;td style="background-color: white; color:black;"&gt;120&lt;/td&gt; 
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;$$
False Positive Rate=\frac{11+12}{100+6+11+1+110+12}
$$&lt;hr&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="真假阴阳性"&gt;真假阴阳性&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E7%9C%9F%E5%81%87%E9%98%B4%E9%98%B3%E6%80%A7"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th style="text-align:left"&gt;&lt;/th&gt;
&lt;th style="text-align:left"&gt;预测为(-)&lt;/th&gt;
&lt;th style="text-align:left"&gt;预测为(+)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;实际为(-)&lt;/td&gt;
&lt;td style="text-align:left"&gt;TN&lt;/td&gt;
&lt;td style="text-align:left"&gt;FP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:left"&gt;实际为(+)&lt;/td&gt;
&lt;td style="text-align:left"&gt;FN&lt;/td&gt;
&lt;td style="text-align:left"&gt;TP&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;TP = true positive 真阳性&lt;/li&gt;
&lt;li&gt;FP = false positive (Type I error) 假阳性(Type I错误) , 印象里就是P&amp;lt;0.05的0.05&lt;/li&gt;
&lt;li&gt;TN = true negative 真阴性&lt;/li&gt;
&lt;li&gt;FN = false negative (Type II error)假阴性(Type II错误)&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="敏感特异性"&gt;敏感特异性&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E6%95%8F%E6%84%9F%E7%89%B9%E5%BC%82%E6%80%A7"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Accuracy: 分类正确的概率. 实际为(-)预测为(-), 实际为(+)预测为(+)叫做正确. 
$$
Accuracy=\frac{TP + TN}{TP + TN + FP + FN}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Classification error: (1-Accuracy), 分类错误的概率
$$
Classification\;  error=\frac{FP + FN}{TP + TN + FP + FN}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Recall, 真阳性率: 实际上为(+), 能够被预测成(+)的概率&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recall又叫 &lt;/li&gt;
&lt;li&gt;True Positive Rate (TPR): 真阳性率&lt;/li&gt;
&lt;li&gt;Sensitivity: 敏感性&lt;/li&gt;
&lt;li&gt;Probability of detection: 检出率
$$
Recall=\frac{TP}{TP+FN}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Precision: 如果预测为(+), 那么预测正确的概率
$$
Precision=\frac{TP}{TP+FP}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;False positive rate (FPR): 假阳性率, 误报率. 本来实际上是(-)的, 结果分类器报告成(+)的概率&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
$$
False Positive Rate=\frac{FP}{TN+FP}
$$&lt;ul&gt;
&lt;li&gt;Specificity, 特异性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应该是真阴性率(之前写错了), TNR, 实际上为(-), 能够被测成(-)的概率
$$
Specificity=\frac{TN}{TN+FN}
$$&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="F1-score:-结合precision与recall"&gt;F1-score: 结合precision与recall&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#F1-score:-%E7%BB%93%E5%90%88precision%E4%B8%8Erecall"&gt;¶&lt;/a&gt;&lt;/h3&gt;$$
F_1=2\frac{precision \times recall}{precision+recall}=\frac{2TP}{2TP+FN+FP}
$$&lt;h3 id="F-score:-更一般地将precision与recall结合成单独一个数"&gt;F-score: 更一般地将precision与recall结合成单独一个数&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#F-score:-%E6%9B%B4%E4%B8%80%E8%88%AC%E5%9C%B0%E5%B0%86precision%E4%B8%8Erecall%E7%BB%93%E5%90%88%E6%88%90%E5%8D%95%E7%8B%AC%E4%B8%80%E4%B8%AA%E6%95%B0"&gt;¶&lt;/a&gt;&lt;/h3&gt;$$
F_\beta=(1+\beta^2)\frac{precision \times recall}{\beta^2\times precision+recall}=\frac{(1+\beta^2)TP}{(1+\beta^2)TP+FN+FP}
$$&lt;p&gt;𝛽用来调整recall vs precision之间的重要程度:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Precision-oriented users: 𝜷 = 0.5 &lt;/li&gt;
&lt;li&gt;Recall-oriented users: 𝜷 = 2&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="阳性预测率-PPV"&gt;阳性预测率 PPV&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E9%98%B3%E6%80%A7%E9%A2%84%E6%B5%8B%E7%8E%87-PPV"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;实际上就是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Precision: 如果预测为(+), 那么预测正确的概率
$$
Precision=\frac{TP}{TP+FP}
$$&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
$$ 
PPV = Precision = \frac{sensitivity \times prevalence}{sensitivity  \times  prevalence+(1 - specificity) \times (1 - prevalence)}
$$&lt;p&gt;其中 prevalence=P(pos), 阳性结果的发生率. 如果自己都知道TP、FP的数据, 当然用简单的公式计算, 如果拿到的是一个标记好各种率的试剂盒, 或者是看一篇新闻报道, 对方把各种率搅合在一起, 那么可能就要通过后一种公式来计算&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="置信区间"&gt;置信区间&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#%E7%BD%AE%E4%BF%A1%E5%8C%BA%E9%97%B4"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;比如某个概率p=0.80(95% CI 0.78, 0.82),&lt;/p&gt;
&lt;p&gt;是说, 真实的概率p, 谁知道是啥, 有95%的概率, 会落在[0.78, 0.82]的范围内. 置信区间的范围和样本量有关, 样本量越大, 置信区间的宽度越窄.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="ROC曲线"&gt;ROC曲线&lt;a class="anchor-link" href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/#ROC%E6%9B%B2%E7%BA%BF"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;X轴: False Positive Rate 假阳性率&lt;/li&gt;
&lt;li&gt;Y轴: True Positive Rate  真阳性率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;左上顶点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理想点&lt;/li&gt;
&lt;li&gt;False positive rate 假阳性率=0 &lt;/li&gt;
&lt;li&gt;True positive rate 真阳性率=1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://i.loli.net/2018/04/01/5ac0c250b9182.png" alt="ROC.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ROC曲线越往左上, 越好. &lt;/li&gt;
&lt;li&gt;曲线下面积(AUC), 越大越好&lt;/li&gt;
&lt;li&gt;45度线是随机瞎猜线&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://i.loli.net/2018/04/01/5ac0c511e280e.png" alt="ROC-2.png"&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_2/</guid><pubDate>Mon, 11 May 2020 02:00:00 GMT</pubDate></item><item><title>人工晶体闪辉Glistening</title><link>https://goldengrape.github.io/posts/ophthalmology/IOL_Glistening/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;近期认真读了一下关于人工晶体Glistening(闪辉)的文献, 连带读了相关的专利. 很有意思, 写出来供眼科同道观赏. (专业文章讲解惯例, 专业名词第一次出现时使用中文译名, 此后持续使用英文原名.)&lt;/p&gt;
&lt;p&gt;临床部分比较无聊, 但原理部分相当有趣.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/ophthalmology/IOL_Glistening/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 10 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/ophthalmology/IOL_Glistening/</guid><pubDate>Fri, 08 May 2020 16:00:00 GMT</pubDate></item><item><title>9年前的鸡汤</title><link>https://goldengrape.github.io/posts/python/soup_9_years/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;突然翻出了9年前给自己熬的鸡汤, 味道很不错. 一下子已经过去9年了呢. 能够以发明作为职业, 实在是非常幸福. &lt;/p&gt;
&lt;p&gt;以下写的事情发生在2011年-2012年:
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/soup_9_years/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/python/soup_9_years/</guid><pubDate>Sun, 03 May 2020 04:00:00 GMT</pubDate></item><item><title>笔法方程的应用: 怎样算写字不好</title><link>https://goldengrape.github.io/posts/bulabula/BrushStroke_equations_app/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;我在&lt;a href="https://goldengrape.github.io/posts/bulabula/A_Brief_History_of_BrushStroke_equations/"&gt;《笔法方程略史》&lt;/a&gt;里面提到了书法的first principle:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基本定理：写完一笔以后, 笔应该恢复到能够写下一笔的状态。&lt;/p&gt;
&lt;p&gt;也就是说, 一笔写完以后, 由于笔的弹性, 笔应该回到初始状态, 笔锋是处于聚拢状态的。不妨称为“回归律”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;并且在那篇文章末尾, 还做了少许应用, 仅仅从这个第一性原理就可以推知一个人的书法是否不好. &lt;/p&gt;
&lt;p&gt;好的艺术表达并不是“科学”或者可度量的, 一定程度以上就较少有客观标准来衡量了. 但&lt;strong&gt;不好&lt;/strong&gt;的艺术表达比较容易定性甚至半定量地分析. &lt;/p&gt;
&lt;p&gt;在本文中, 我将再展开讨论如何算是不好的书法. &lt;/p&gt;
&lt;p&gt;我们平时看到的书法, 通常是写完以后的作品, 是静态的. 但书法是一个写的过程, 我更愿意把书法作品当作是 &lt;strong&gt;书法家通过毛笔玩“极限运动”时在平面留下的轨迹.&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;想象一下玩极限运动的人, 就是那种踩着滑板上下翻飞的场景. 明白王羲之为什么字“逸少”了吧.&lt;/p&gt;
&lt;p&gt;我们现在已经无法看到古代人写字的过程, 只能从他们留下的痕迹里去猜想精彩的极限运动过程. 但现代的书法作品不同, 现代有录像啊, 可以从录像里直接看到一个人写字的全过程. &lt;/p&gt;
&lt;p&gt;以下的分析是理工科定性或半定量分析, 不涉及到任何主观感受, 是我最爱的 &lt;strong&gt;机械的、生硬的、可重复的&lt;/strong&gt; 分析. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/bulabula/BrushStroke_equations_app/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 2 分钟)&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/bulabula/BrushStroke_equations_app/</guid><pubDate>Thu, 23 Apr 2020 13:00:00 GMT</pubDate></item><item><title>AI 4 Med 笔记(1.1)胸片诊断</title><link>https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_1/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;第一门课叫AI For Medical Diagnosis, 也就是用于诊断的AI. 有三周的课程&lt;/p&gt;
&lt;p&gt;用于诊断一般就是图像识别, 看胸片、眼底照片、CT、核磁. 其中MRI是3D数据, 其他一般是二维. &lt;/p&gt;
&lt;p&gt;诊断问题一般就是二分类, 有病或者没病.  &lt;/p&gt;
&lt;p&gt;二分类的loss很简单:&lt;/p&gt;
&lt;p&gt;L(X,y)=&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-log(P(Y=1|X)) if y==1&lt;/li&gt;
&lt;li&gt;-log(P(Y=0|X)) if y==0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就是把卷积神经网络CNN最后一步的激活函数设成sigmoid, 得到一个在[0,1]之间的概率, 对这个数字求-log. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_1/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 2 分钟)&lt;/p&gt;&lt;/div&gt;</description><category>AI4med</category><guid>https://goldengrape.github.io/posts/python/AI4med/AI4med_note_1_1/</guid><pubDate>Thu, 23 Apr 2020 04:01:00 GMT</pubDate></item><item><title>AI 4 Med 笔记(0)总体印象</title><link>https://goldengrape.github.io/posts/python/AI4med/AI4med_note_0/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;最近选了deeplearning.ai在coursera上开设的[AI for Medicine Specialization], 有三门课:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/ai-for-medical-diagnosis/home/welcome"&gt;AI for Medical Diagnosis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/ai-for-medical-prognosis/home/welcome"&gt;AI for Medical Prognosis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/ai-for-medical-treatment/home/welcome"&gt;AI For Medical Treatment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前我已经通过了前两门, AI For Medical Treatment要到5月才能开课. &lt;/p&gt;
&lt;p&gt;本来想在7天免费期内一口气刷完三门课通关, 可惜因为开课时间所限, 无法达成此成就了. 
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/AI4med/AI4med_note_0/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><category>AI4med</category><guid>https://goldengrape.github.io/posts/python/AI4med/AI4med_note_0/</guid><pubDate>Thu, 23 Apr 2020 04:00:00 GMT</pubDate></item><item><title>疫情中的3D打印</title><link>https://goldengrape.github.io/posts/bulabula/3d-print-in-plague/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;在瘟疫中, 很多医疗相关的设备可能不够用, 生产又跟不上, 这时候用3D打印机制造一些零部件, 将现有替代品改造利用起来, 是一件好事. &lt;/p&gt;
&lt;p&gt;但是...&lt;/p&gt;
&lt;h3&gt;关于3D打印呼吸机面罩&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="https://www.isinnova.it/wp-content/uploads/2020/03/DSC3147-scaled.jpg"&gt;&lt;/p&gt;
&lt;p&gt;不久前看到isinnova用浮潜面镜做的呼吸机面罩&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官网: https://www.isinnova.it/easy-covid19-eng/&lt;/li&gt;
&lt;li&gt;中文报道: https://www.nanjixiong.com/thread-140539-1-1.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我也有疑虑:&lt;/p&gt;
&lt;p&gt;如果使用的是浮潜面镜原来的设计, 从顶部进入空气, 从下巴附近排出空气, 那么这种设计并不能提供吸气和呼气时的正压, 跟一个纸杯的区别不大.&lt;/p&gt;
&lt;p&gt;如果是堵住原本的出气口, 并且拆除眼前到口鼻之间的单向阀,
在头顶同时接入进气口和出气口, 并且令呼吸机控制吸气和呼气压力, 那么在那个3D打印阀门的位置会出现进气和出气的短路, 即使不在那个点发生, 也会在面罩眼睛附近的区域发生气流的短路,&lt;/p&gt;
&lt;p&gt;那么在口鼻处的气体交换就不充分, 会造成二氧化碳潴留和氧气供应量不足, 当然可以通过氧气浓度来调整, 但二氧化碳潴留仍然存在. 进一步造成呼吸性酸中毒.&lt;/p&gt;
&lt;p&gt;带着疑虑, 我去isinnova的官网 https://isinnova.it/easy-covid19-eng/ 确认了一下:&lt;/p&gt;
&lt;p&gt;操作视频中(https://youtu.be/w4Csqdxkrfw)是把出气口的单向阀门进行了反向.
在头顶入口处只是两根联通的管道.&lt;/p&gt;
&lt;p&gt;&lt;img alt="屏幕快照 2020-03-27 15.37.33" src="https://i.loli.net/2020/03/27/uNfdO8IiqJVBsmy.png"&gt;&lt;/p&gt;
&lt;p&gt;这个设计大致等效于对着纸袋呼吸, 只不过纸袋另一端有个孔.
最终的结果是吸入的气体中, 达不到呼吸机设定的氧气浓度, 而呼出的二氧化碳会存留在口鼻附近. 将造成&lt;strong&gt;低氧和呼吸性酸中毒&lt;/strong&gt; . &lt;/p&gt;
&lt;p&gt;但愿不要有医院真的疯到用这种东西.&lt;/p&gt;
&lt;h3&gt;关于3D打印口罩&lt;/h3&gt;
&lt;p&gt;3D打印机只能打印出一个框架, 过滤的部分仍然需要使用滤棉或者现有的口罩. 而这两种东西在真正需要的地区, 显然还是不足的. &lt;/p&gt;
&lt;p&gt;当然, 3D打印后, 可以缩小过滤面积, 可以将一片口罩切成N块来使用, 但这样会造成呼吸阻力增大N倍, 受潮时间减少N倍, 对于需要长时间工作的一线医护仍然危险.&lt;/p&gt;
&lt;p&gt;如果制造一个口罩就要消耗一个口罩, 显然没有意义. 为了降低呼吸阻力, 有使用较小的过滤面积, 就要使用外源的动力, 这个我已经设计过了https://thingiverse.com/thing:4141738&lt;/p&gt;
&lt;p&gt;但是, 我无法对自制口罩的安全性进行测量, 自己使用还可以, 如果拿出来量产给其他人用, 就太危险了.&lt;/p&gt;
&lt;p&gt;如果是在短时间使用, 那么呼吸阻力大一点也没什么, 比如旧国标里外科口罩的呼吸阻力约50pa, 而N95约350pa, 也就是说, 把一片外科口罩切成7块来使用, 也就相当于N95的阻力. 对于短时间, 比如通勤或者短时间执勤是可行的.&lt;/p&gt;
&lt;p&gt;这种情况3D打印框架也不是必须的.&lt;/p&gt;
&lt;p&gt;你所需要的只是一个替代大部分口罩面积的东西, &lt;/p&gt;
&lt;p&gt;比如, 纸, &lt;/p&gt;
&lt;p&gt;用纸是非常简单的, 按照N95半片外形画出来, 然后剪裁, 用宽胶带在纸面上贴满, 然后剪出一个大约1/4口罩大小的孔, 再剪出一片口罩继续用胶带贴上就可以了.&lt;/p&gt;
&lt;p&gt;还可以使用的方案是直接用输液贴膜, (一种类似透明胶的东西, 更薄, 更软), 直接将一小片口罩贴在口鼻附近, 也可以达到非常好的气密效果.&lt;/p&gt;
&lt;p&gt;当然所有这些DIY, 都难以进行检测, 难以保证安全性, 自己做来玩, 甚至自己用可以. 但给别人使用, 甚至自称是N95口罩, 哪怕是免费捐助, 我认为也是不道德的.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;综上, 我认为即使在危机时刻, 工程伦理、医学伦理仍然很重要, 不应当带给人们错误的设计和错误的希望.&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description><guid>https://goldengrape.github.io/posts/bulabula/3d-print-in-plague/</guid><pubDate>Fri, 27 Mar 2020 08:00:00 GMT</pubDate></item></channel></rss>