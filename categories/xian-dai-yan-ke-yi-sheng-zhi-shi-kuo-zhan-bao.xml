<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GoldenGrape's Blog (关于文章 现代眼科医生知识扩展包)</title><link>https://goldengrape.github.io/</link><description></description><atom:link href="https://goldengrape.github.io/categories/xian-dai-yan-ke-yi-sheng-zhi-shi-kuo-zhan-bao.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2020 &lt;a href="mailto:https://twitter.com/goldengrape"&gt;Golden Grape&lt;/a&gt; </copyright><lastBuildDate>Mon, 11 May 2020 06:40:58 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>那些在线的jupyter</title><link>https://goldengrape.github.io/posts/python/na-xie-zai-xian-de-jupyter/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;h4&gt;update:&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Data School有一篇非常好的评测，写了6个在线的Jupyter服务，建议去看看。
&lt;a href="https://www.dataschool.io/cloud-services-for-jupyter-notebook/"&gt;Six easy ways to run your Jupyter Notebook in the cloud&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里还有一个太长不看的&lt;a href="https://docs.google.com/spreadsheets/d/12thaaXg1Idr3iWST8QyASNDs08sjdPd6m9mbCGtHFn0"&gt;总结表格&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;以下部分写于2年前，部分内容与现实略有差异&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Jupyter&lt;/h2&gt;
&lt;p&gt;如果你是python的初学者, 非常推荐Jupyter.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/na-xie-zai-xian-de-jupyter/Jupyter.org"&gt;Juypter&lt;/a&gt;是一个交互式的编程环境,  号称&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;The Notebook has support for over 40 programming languages,
including Python, R, Julia, and Scala.
&lt;/pre&gt;


&lt;p&gt;支持超过40种语言, 其中包括Python,  R,  Julia和Scala. 虽然除了Python, 目前提到的其他语言我还都不会, 但是看起来是很强大很有前途的样子.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/na-xie-zai-xian-de-jupyter/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/na-xie-zai-xian-de-jupyter/</guid><pubDate>Sat, 18 May 2019 04:00:00 GMT</pubDate></item><item><title>自动生成Keynote演讲视频</title><link>https://goldengrape.github.io/posts/bulabula/auto_keynote_presentation/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;h3&gt;目的:&lt;/h3&gt;
&lt;p&gt;用mac上的系统语音, 自动播放keynote幻灯, 并且朗读keynote中的“演讲者备注”, 如果页面中有动画, 就依次播放完动画, 然后再切换到下一页.&lt;/p&gt;
&lt;!-- &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/AOMDt7xrIU4" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt; --&gt;

&lt;h3&gt;使用方法:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;到这个&lt;a href="https://gist.github.com/goldengrape/eb4359a6467c5196435e469708c95f11"&gt;gist页面&lt;/a&gt;, 点击Download zip, 将代码下载到电脑上, 然后解压缩得到“Simple Play and Say.scpt”文件&lt;/li&gt;
&lt;li&gt;制作好keynote, 保持当前文档打开状态&lt;/li&gt;
&lt;li&gt;双击打开“Simple Play and Say.scpt”文件, 然后运行脚本&lt;/li&gt;
&lt;li&gt;QuickTime Player会自动录制屏幕播放过程. 然后可以保存或者导出成其他分辨率的视频.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种方式可以快速生成演讲视频, 如果讲稿中有地方需要修改, 只要改动字符就可以了, 不必像对着镜头讲课录像那种必须要重新剪辑或者重新配音.&lt;/p&gt;
&lt;p&gt;而且说个英文什么的也很方便, 只是中文语音目前只有“婷婷”可以用.&lt;/p&gt;
&lt;h3&gt;进阶使用方法:&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/bulabula/auto_keynote_presentation/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><category>applescript</category><category>教程</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/bulabula/auto_keynote_presentation/</guid><pubDate>Sun, 26 Aug 2018 02:00:00 GMT</pubDate></item><item><title>眼科数据随机森林</title><link>https://goldengrape.github.io/posts/python/random-forest-for-ophthalmology-data/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;要讲解"随机森林", 先要简介一下"决策树". 各位眼科大夫在眼科门诊每天都在用"决策树", 比如一位单侧眼痛伴同侧头痛的病人进入门诊:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;眼压&amp;gt;21mmHg吗?&lt;ul&gt;
&lt;li&gt;不是, 考虑其他可能&lt;/li&gt;
&lt;li&gt;是的, 考虑青光眼可能, 还有鉴别诊断1, 2, 3..., 进入下一题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;前房浅吗?&lt;ul&gt;
&lt;li&gt;不是, 考虑其他可能&lt;/li&gt;
&lt;li&gt;是的, 考虑急性闭角型青光眼发作, 还有鉴别诊断x,y,z...,, 进入下一题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;瞳孔光反射存在吗?&lt;ul&gt;
&lt;li&gt;存在, 考虑其他可能&lt;/li&gt;
&lt;li&gt;瞳孔固定, 考虑急性闭角型青光眼发作, 进入下一题
. . . .&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这就是一颗"决策树", 就是一堆判断题, 一层一层筛选, 最终将数据(病人)分成几类(急闭, 其他)&lt;/p&gt;
&lt;p&gt;"随机森林"就是由一组这样的"决策树"组成的分类器.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/random-forest-for-ophthalmology-data/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;</description><category>ophthalmology</category><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/random-forest-for-ophthalmology-data/</guid><pubDate>Mon, 14 May 2018 14:00:00 GMT</pubDate></item><item><title>Scikit-learn笔记4(ROC曲线)</title><link>https://goldengrape.github.io/posts/python/scikit-learn-note-4/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://www.coursera.org/learn/python-machine-learning"&gt;Applied Machine Learning in Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这门课实在是太差了. 严重差评:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;"所谓私人恩怨，跟政治就是一回事。所以，如果有哪个白痴政客或者哪个大人物想要推行一项法令或政策，伤害到你或者你亲人朋友的利益，那就是私人恩怨。点燃你的怒火吧。" ----奎尔&lt;/p&gt;
&lt;p&gt;作为报复, 我决定把第三周的ppt给丫翻译了!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/scikit-learn-note-4/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 2 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/scikit-learn-note-4/</guid><pubDate>Sun, 01 Apr 2018 11:30:00 GMT</pubDate></item><item><title>Scikit-learn笔记3(各种率)</title><link>https://goldengrape.github.io/posts/python/%08scikit-learn-note-3/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;p&gt;关于precision, recall的定义, 关于假阳性, 假阴性, 真阳性, 真阴性之类的定义, 我以后一定还是会忘记的.&lt;/p&gt;
&lt;p&gt;而且鉴于我以前凡是两个能够弄混的事情一定可以弄混的特性,&lt;/p&gt;
&lt;p&gt;于是把什么真假阴性阳性扩展到更多的情况, 画了张图&lt;/p&gt;
&lt;p&gt;红色是分子, 灰色是分母. (灰色区域都是包含红色的)&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://goldengrape.github.io/images/ratios.png"&gt;&lt;/p&gt;&lt;/div&gt;</description><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/%08scikit-learn-note-3/</guid><pubDate>Sun, 01 Apr 2018 04:00:00 GMT</pubDate></item><item><title>Scikit-learn笔记2</title><link>https://goldengrape.github.io/posts/python/scikit-learn-note-2/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://www.coursera.org/learn/python-machine-learning"&gt;Applied Machine Learning in Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这门课实在是太差了. 严重差评:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本身讲得就很差, 还经常口误&lt;/li&gt;
&lt;li&gt;不写板书, 对着ppt念&lt;/li&gt;
&lt;li&gt;代码写得也混乱, 在函数内部用import? ? &lt;/li&gt;
&lt;li&gt;交作业的时候要手动注释掉matplotlib&lt;/li&gt;
&lt;li&gt;考试填空题是给出函数的运行结果&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;我上大学时上毛泽东思想概论和邓小平理论的课听着都比这舒坦.&lt;/p&gt;
&lt;p&gt;作为报复, 我决定把第三周的ppt给丫翻译了!&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/scikit-learn-note-2/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 2 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/scikit-learn-note-2/</guid><pubDate>Sat, 31 Mar 2018 12:30:00 GMT</pubDate></item><item><title>Scikit-learn笔记</title><link>https://goldengrape.github.io/posts/python/scikit-learn-note/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;最近在学Michigan大学Data science课程的第三门&lt;a href="https://www.coursera.org/learn/python-machine-learning/home/welcome"&gt;Applied Machine Learning in Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;唉, 老师讲课好差劲. 听一遍一点印象都没有, 很快就忘了. 如果一个老师如果上课的时候不写板书, 只用PPT, 高概率不是个好老师. 连作业里的代码风格都很差劲, 哪有在函数内部import的, 交作业的时候还得自己把matplotlib给注释掉.&lt;/p&gt;
&lt;p&gt;就是这个老师啦:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://coursera-instructor-photos.s3.amazonaws.com/61/58158043d011e69605657346ccd592/kevyn.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;Kevyn Collins-Thompson&lt;/p&gt;
&lt;p&gt;所以, 得趁着刚写完作业, 还有些印象, 赶紧记录下来.&lt;/p&gt;
&lt;p&gt;这门课讲的也是机器学习, 但不是深度学习, 而是更为"传统"一些的. 用到的主要是Scikit-Learn.&lt;/p&gt;
&lt;p&gt;关于Scikit-learn, datacamp上有个&lt;a href="https://www.datacamp.com/community/blog/scikit-learn-cheat-sheet"&gt;cheat sheet&lt;/a&gt;看起来不错, 而且&lt;a href="http://scikit-learn.org/stable/documentation.html"&gt;SciKit-Learn自己的说明文档&lt;/a&gt;也很不错. 以后还是看这些文档参考.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/scikit-learn-note/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 2 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/scikit-learn-note/</guid><pubDate>Sun, 25 Mar 2018 15:30:00 GMT</pubDate></item><item><title>面向眼科医生的正则表达式(0)-简介</title><link>https://goldengrape.github.io/posts/python/reg101-for-ophthalmologist-0/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;正则表达式是一种程序员用来在大量字符里进行定位的方法. 算得上是处理字符串时的解剖学了.&lt;/p&gt;
&lt;p&gt;最近解锁这个技能以后, 如同拿到了一把雷神之锤, 非常好用看什么都想砸一下. 
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/reg101-for-ophthalmologist-0/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 1 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/reg101-for-ophthalmologist-0/</guid><pubDate>Mon, 12 Mar 2018 07:00:00 GMT</pubDate></item><item><title>面向眼科医生的正则表达式(1)-练习</title><link>https://goldengrape.github.io/posts/python/reg101-for-ophthalmologist/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;以从抗体序列中定位CDR来练习正则表达式.&lt;/p&gt;
&lt;p&gt;这个练习中, 我们将会使用这样一些正则表达式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[A-Z]: 任意字母&lt;/li&gt;
&lt;li&gt;[A-Z]{3}: 任意字母重复3次&lt;/li&gt;
&lt;li&gt;[A-Z]{3,5}: 任意字母重复至少3次, 至多5次&lt;/li&gt;
&lt;li&gt;[A-Z]*?C: 任意字母重复0次或多次直到第一次遇到字母C&lt;/li&gt;
&lt;li&gt;WYQ|WLQ|WFQ|WYL: 在WYQ, WLQ, WFQ, WYL之中选1个&lt;/li&gt;
&lt;li&gt;^A:  以字母A开头&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/reg101-for-ophthalmologist/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 3 分钟)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/reg101-for-ophthalmologist/</guid><pubDate>Sun, 11 Mar 2018 04:00:00 GMT</pubDate></item><item><title>统计图清理</title><link>https://goldengrape.github.io/posts/python/dejunkifying-a-plot/</link><dc:creator>Golden Grape</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;最近正在学&lt;a href="https://www.coursera.org/learn/python-plotting/home/welcome"&gt;Applied Plotting, Charting &amp;amp; Data Representation in Python&lt;/a&gt;, 老师在第一周的课程中先讲了一遍统计图的审美, 其中有一段是展示如何将图中无用的部分清除, 所谓Dejunkify, 以强调显示主题. 感觉非常好. 完成第二周的作业后, 我应该是能够用matplotlib进行基本的画图了. 所以试着把这个例子重现一遍.&lt;/p&gt;
&lt;p&gt;课程中的例子来自于&lt;a href="https://www.darkhorseanalytics.com/blog/data-looks-better-naked"&gt;Dark Horse&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;爱德华·图夫特（Edward Tufte）在他1983年经典的著作&lt;a href="http://www.humanities.ufl.edu/pdf/tufte-aesthetics_and_technique.pdf"&gt;“量化信息的视觉显示”&lt;/a&gt;（The Visual Display of Quantitative Information） 一书中指出：“数据墨水(Data-ink)是图像中不可抹去的核心，是为了反映数字的变化而安排的不可或缺的印迹”&lt;/p&gt;
&lt;p&gt;Edward Tufte introduced the concept of data-ink in his 1983 classic The Visual Display of Quantitative Information. In it he states "Data-ink is the non-erasable core of the graphic, the non-redundant ink arranged in response to variation in the numbers represented" (emphasis mine).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个"好"的统计图, 应当是尽可能多的保留data ink, 尽可能少的chart junk. 这一段动画显示了如何把一个凌乱的统计图删减到只包含必要的"Data-ink"的过程. 
&lt;img src="http://static1.squarespace.com/static/56713bf4dc5cb41142f28d1f/5671e8bf816924fc22651410/5671eae2816924fc2265189a/1450306274301/data-ink.gif" alt=""&gt;&lt;/p&gt;
&lt;p&gt;接下来我试着用matplotlib重现这个过程, 也算是参照&lt;a href="https://goldengrape.github.io/posts/python/cheatsheet/Matplotlib_cheat_sheet"&gt;matplotlib cheat sheet&lt;/a&gt; 的一次练习. 
&lt;/p&gt;&lt;p&gt;&lt;a href="https://goldengrape.github.io/posts/python/dejunkifying-a-plot/"&gt;阅读更多…&lt;/a&gt; (剩余阅读时间 8 分钟)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>现代眼科医生知识扩展包</category><guid>https://goldengrape.github.io/posts/python/dejunkifying-a-plot/</guid><pubDate>Sat, 20 Jan 2018 08:30:00 GMT</pubDate></item></channel></rss>